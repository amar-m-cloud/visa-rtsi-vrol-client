//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.11.01 at 09:57:25 PM GMT 
//


package io.github.brendonfm.visa.dto;

import java.io.Serializable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;


@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(Include.NON_EMPTY)
public class DisputeProcessErrorType implements Serializable {

	private static final long serialVersionUID = 4543684271331310154L;
	
	@JsonProperty("WhatIncorrectAboutTransaction")
    protected WhatIncorrectAboutTransactionType whatIncorrectAboutTransaction;
    @JsonProperty("AccountStatus")
    protected AccountStatusType accountStatus;
    @JsonProperty("CorrectCurrency")
    protected BigInteger correctCurrency;
    @JsonProperty("RolTransactionId")
    protected List<Long> rolTransactionId;
    @JsonProperty("IncorrectTransactionId")
    protected String incorrectTransactionId;
    @JsonProperty("DuplicateTranId")
    protected List<String> duplicateTranId;
    @JsonProperty("TransactionCodeIncorrect")
    protected TransactionCodeIncorrectType transactionCodeIncorrect;
    @JsonProperty("IssuerMasterFileAccountNumberInd")
    protected YNType issuerMasterFileAccountNumberInd;
    @JsonProperty("CardholderReceiptAccountNumber")
    protected String cardholderReceiptAccountNumber;
    @JsonProperty("ChipCardContainValidCryptogramInd")
    protected YNType chipCardContainValidCryptogramInd;
    @JsonProperty("ExplainWhyCreditRefundProcessedInError")
    protected String explainWhyCreditRefundProcessedInError;
    @JsonProperty("ReceiptAccountNumberMatchInd")
    protected YNType receiptAccountNumberMatchInd;
    @JsonProperty("PrepaymentPartialTransactionInd")
    protected YNType prepaymentPartialTransactionInd;
    @JsonProperty("CardholderReceiptAmt")
    protected AmountType cardholderReceiptAmt;
    @JsonProperty("MerchantDisputePriceDiffInd")
    protected YNType merchantDisputePriceDiffInd;
    @JsonProperty("BothTransactionsOnSameAcctNumberInd")
    protected YNType bothTransactionsOnSameAcctNumberInd;
    @JsonProperty("IssuerOrCardholderOtherAcctWithDiffVisaCardInd")
    protected YNType issuerOrCardholderOtherAcctWithDiffVisaCardInd;
    @JsonProperty("IssuerEvidenceMerchantPassedOnFundsInd")
    protected YNType issuerEvidenceMerchantPassedOnFundsInd;
    @JsonProperty("PrepaymentBalanceNotPaidInd")
    protected YNType prepaymentBalanceNotPaidInd;
    @JsonProperty("ProvidingPaymentProofOtherMeans")
    protected ProvidingPaymentProofOtherType providingPaymentProofOtherMeans;
    @JsonProperty("ProcessingErrorOtherExplanation")
    protected String processingErrorOtherExplanation;
    @JsonProperty("IncorrectCurrencyReason")
    protected IncorrectCurrencyReasonType incorrectCurrencyReason;
    @JsonProperty("AuthorizationRequestDeclinedValidDataInd")
    protected Boolean authorizationRequestDeclinedValidDataInd;
    @JsonProperty("ExplainWhyValidDataInclusionReason")
    protected String explainWhyValidDataInclusionReason;
    @JsonProperty("CardholderDidNotAgreeDCC")
    protected YNType cardholderDidNotAgreeDCC;
    @JsonProperty("CardholderAttemptToResolve")
    protected YNType cardholderAttemptToResolve;
    @JsonProperty("AttemptToResolveProhLocalLaw")
    protected YNType attemptToResolveProhLocalLaw;
    @JsonProperty("DetailsOfLocalLaw")
    protected String detailsOfLocalLaw;
    @JsonProperty("OtherTranInvolveDiffMerchantInd")
    protected YNType otherTranInvolveDiffMerchantInd;
    @JsonProperty("OtherTranSameMerchantInd")
    protected YNType otherTranSameMerchantInd;
    @JsonProperty("TransactionID")
    protected String transactionID;
    @JsonProperty("ARN")
    protected String arn;

    /**
     * Gets the value of the whatIncorrectAboutTransaction property.
     * 
     * @return
     *     possible object is
     *     {@link WhatIncorrectAboutTransactionType }
     *     
     */
    public WhatIncorrectAboutTransactionType getWhatIncorrectAboutTransaction() {
        return whatIncorrectAboutTransaction;
    }

    /**
     * Sets the value of the whatIncorrectAboutTransaction property.
     * 
     * @param value
     *     allowed object is
     *     {@link WhatIncorrectAboutTransactionType }
     *     
     */
    public void setWhatIncorrectAboutTransaction(WhatIncorrectAboutTransactionType value) {
        this.whatIncorrectAboutTransaction = value;
    }

    /**
     * Gets the value of the accountStatus property.
     * 
     * @return
     *     possible object is
     *     {@link AccountStatusType }
     *     
     */
    public AccountStatusType getAccountStatus() {
        return accountStatus;
    }

    /**
     * Sets the value of the accountStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link AccountStatusType }
     *     
     */
    public void setAccountStatus(AccountStatusType value) {
        this.accountStatus = value;
    }

    /**
     * Gets the value of the correctCurrency property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getCorrectCurrency() {
        return correctCurrency;
    }

    /**
     * Sets the value of the correctCurrency property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setCorrectCurrency(BigInteger value) {
        this.correctCurrency = value;
    }

    /**
     * Gets the value of the rolTransactionId property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rolTransactionId property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRolTransactionId().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Long }
     * 
     * 
     */
    public List<Long> getRolTransactionId() {
        if (rolTransactionId == null) {
            rolTransactionId = new ArrayList<Long>();
        }
        return this.rolTransactionId;
    }

    /**
     * Gets the value of the incorrectTransactionId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIncorrectTransactionId() {
        return incorrectTransactionId;
    }

    /**
     * Sets the value of the incorrectTransactionId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIncorrectTransactionId(String value) {
        this.incorrectTransactionId = value;
    }

    /**
     * Gets the value of the duplicateTranId property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the duplicateTranId property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDuplicateTranId().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getDuplicateTranId() {
        if (duplicateTranId == null) {
            duplicateTranId = new ArrayList<String>();
        }
        return this.duplicateTranId;
    }

    /**
     * Gets the value of the transactionCodeIncorrect property.
     * 
     * @return
     *     possible object is
     *     {@link TransactionCodeIncorrectType }
     *     
     */
    public TransactionCodeIncorrectType getTransactionCodeIncorrect() {
        return transactionCodeIncorrect;
    }

    /**
     * Sets the value of the transactionCodeIncorrect property.
     * 
     * @param value
     *     allowed object is
     *     {@link TransactionCodeIncorrectType }
     *     
     */
    public void setTransactionCodeIncorrect(TransactionCodeIncorrectType value) {
        this.transactionCodeIncorrect = value;
    }

    /**
     * Gets the value of the issuerMasterFileAccountNumberInd property.
     * 
     * @return
     *     possible object is
     *     {@link YNType }
     *     
     */
    public YNType getIssuerMasterFileAccountNumberInd() {
        return issuerMasterFileAccountNumberInd;
    }

    /**
     * Sets the value of the issuerMasterFileAccountNumberInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link YNType }
     *     
     */
    public void setIssuerMasterFileAccountNumberInd(YNType value) {
        this.issuerMasterFileAccountNumberInd = value;
    }

    /**
     * Gets the value of the cardholderReceiptAccountNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCardholderReceiptAccountNumber() {
        return cardholderReceiptAccountNumber;
    }

    /**
     * Sets the value of the cardholderReceiptAccountNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCardholderReceiptAccountNumber(String value) {
        this.cardholderReceiptAccountNumber = value;
    }

    /**
     * Gets the value of the chipCardContainValidCryptogramInd property.
     * 
     * @return
     *     possible object is
     *     {@link YNType }
     *     
     */
    public YNType getChipCardContainValidCryptogramInd() {
        return chipCardContainValidCryptogramInd;
    }

    /**
     * Sets the value of the chipCardContainValidCryptogramInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link YNType }
     *     
     */
    public void setChipCardContainValidCryptogramInd(YNType value) {
        this.chipCardContainValidCryptogramInd = value;
    }

    /**
     * Gets the value of the explainWhyCreditRefundProcessedInError property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExplainWhyCreditRefundProcessedInError() {
        return explainWhyCreditRefundProcessedInError;
    }

    /**
     * Sets the value of the explainWhyCreditRefundProcessedInError property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExplainWhyCreditRefundProcessedInError(String value) {
        this.explainWhyCreditRefundProcessedInError = value;
    }

    /**
     * Gets the value of the receiptAccountNumberMatchInd property.
     * 
     * @return
     *     possible object is
     *     {@link YNType }
     *     
     */
    public YNType getReceiptAccountNumberMatchInd() {
        return receiptAccountNumberMatchInd;
    }

    /**
     * Sets the value of the receiptAccountNumberMatchInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link YNType }
     *     
     */
    public void setReceiptAccountNumberMatchInd(YNType value) {
        this.receiptAccountNumberMatchInd = value;
    }

    /**
     * Gets the value of the prepaymentPartialTransactionInd property.
     * 
     * @return
     *     possible object is
     *     {@link YNType }
     *     
     */
    public YNType getPrepaymentPartialTransactionInd() {
        return prepaymentPartialTransactionInd;
    }

    /**
     * Sets the value of the prepaymentPartialTransactionInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link YNType }
     *     
     */
    public void setPrepaymentPartialTransactionInd(YNType value) {
        this.prepaymentPartialTransactionInd = value;
    }

    /**
     * Gets the value of the cardholderReceiptAmt property.
     * 
     * @return
     *     possible object is
     *     {@link AmountType }
     *     
     */
    public AmountType getCardholderReceiptAmt() {
        return cardholderReceiptAmt;
    }

    /**
     * Sets the value of the cardholderReceiptAmt property.
     * 
     * @param value
     *     allowed object is
     *     {@link AmountType }
     *     
     */
    public void setCardholderReceiptAmt(AmountType value) {
        this.cardholderReceiptAmt = value;
    }

    /**
     * Gets the value of the merchantDisputePriceDiffInd property.
     * 
     * @return
     *     possible object is
     *     {@link YNType }
     *     
     */
    public YNType getMerchantDisputePriceDiffInd() {
        return merchantDisputePriceDiffInd;
    }

    /**
     * Sets the value of the merchantDisputePriceDiffInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link YNType }
     *     
     */
    public void setMerchantDisputePriceDiffInd(YNType value) {
        this.merchantDisputePriceDiffInd = value;
    }

    /**
     * Gets the value of the bothTransactionsOnSameAcctNumberInd property.
     * 
     * @return
     *     possible object is
     *     {@link YNType }
     *     
     */
    public YNType getBothTransactionsOnSameAcctNumberInd() {
        return bothTransactionsOnSameAcctNumberInd;
    }

    /**
     * Sets the value of the bothTransactionsOnSameAcctNumberInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link YNType }
     *     
     */
    public void setBothTransactionsOnSameAcctNumberInd(YNType value) {
        this.bothTransactionsOnSameAcctNumberInd = value;
    }

    /**
     * Gets the value of the issuerOrCardholderOtherAcctWithDiffVisaCardInd property.
     * 
     * @return
     *     possible object is
     *     {@link YNType }
     *     
     */
    public YNType getIssuerOrCardholderOtherAcctWithDiffVisaCardInd() {
        return issuerOrCardholderOtherAcctWithDiffVisaCardInd;
    }

    /**
     * Sets the value of the issuerOrCardholderOtherAcctWithDiffVisaCardInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link YNType }
     *     
     */
    public void setIssuerOrCardholderOtherAcctWithDiffVisaCardInd(YNType value) {
        this.issuerOrCardholderOtherAcctWithDiffVisaCardInd = value;
    }

    /**
     * Gets the value of the issuerEvidenceMerchantPassedOnFundsInd property.
     * 
     * @return
     *     possible object is
     *     {@link YNType }
     *     
     */
    public YNType getIssuerEvidenceMerchantPassedOnFundsInd() {
        return issuerEvidenceMerchantPassedOnFundsInd;
    }

    /**
     * Sets the value of the issuerEvidenceMerchantPassedOnFundsInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link YNType }
     *     
     */
    public void setIssuerEvidenceMerchantPassedOnFundsInd(YNType value) {
        this.issuerEvidenceMerchantPassedOnFundsInd = value;
    }

    /**
     * Gets the value of the prepaymentBalanceNotPaidInd property.
     * 
     * @return
     *     possible object is
     *     {@link YNType }
     *     
     */
    public YNType getPrepaymentBalanceNotPaidInd() {
        return prepaymentBalanceNotPaidInd;
    }

    /**
     * Sets the value of the prepaymentBalanceNotPaidInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link YNType }
     *     
     */
    public void setPrepaymentBalanceNotPaidInd(YNType value) {
        this.prepaymentBalanceNotPaidInd = value;
    }

    /**
     * Gets the value of the providingPaymentProofOtherMeans property.
     * 
     * @return
     *     possible object is
     *     {@link ProvidingPaymentProofOtherType }
     *     
     */
    public ProvidingPaymentProofOtherType getProvidingPaymentProofOtherMeans() {
        return providingPaymentProofOtherMeans;
    }

    /**
     * Sets the value of the providingPaymentProofOtherMeans property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProvidingPaymentProofOtherType }
     *     
     */
    public void setProvidingPaymentProofOtherMeans(ProvidingPaymentProofOtherType value) {
        this.providingPaymentProofOtherMeans = value;
    }

    /**
     * Gets the value of the processingErrorOtherExplanation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getProcessingErrorOtherExplanation() {
        return processingErrorOtherExplanation;
    }

    /**
     * Sets the value of the processingErrorOtherExplanation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProcessingErrorOtherExplanation(String value) {
        this.processingErrorOtherExplanation = value;
    }

    /**
     * Gets the value of the incorrectCurrencyReason property.
     * 
     * @return
     *     possible object is
     *     {@link IncorrectCurrencyReasonType }
     *     
     */
    public IncorrectCurrencyReasonType getIncorrectCurrencyReason() {
        return incorrectCurrencyReason;
    }

    /**
     * Sets the value of the incorrectCurrencyReason property.
     * 
     * @param value
     *     allowed object is
     *     {@link IncorrectCurrencyReasonType }
     *     
     */
    public void setIncorrectCurrencyReason(IncorrectCurrencyReasonType value) {
        this.incorrectCurrencyReason = value;
    }

    /**
     * Gets the value of the authorizationRequestDeclinedValidDataInd property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAuthorizationRequestDeclinedValidDataInd() {
        return authorizationRequestDeclinedValidDataInd;
    }

    /**
     * Sets the value of the authorizationRequestDeclinedValidDataInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAuthorizationRequestDeclinedValidDataInd(Boolean value) {
        this.authorizationRequestDeclinedValidDataInd = value;
    }

    /**
     * Gets the value of the explainWhyValidDataInclusionReason property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExplainWhyValidDataInclusionReason() {
        return explainWhyValidDataInclusionReason;
    }

    /**
     * Sets the value of the explainWhyValidDataInclusionReason property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExplainWhyValidDataInclusionReason(String value) {
        this.explainWhyValidDataInclusionReason = value;
    }

    /**
     * Gets the value of the cardholderDidNotAgreeDCC property.
     * 
     * @return
     *     possible object is
     *     {@link YNType }
     *     
     */
    public YNType getCardholderDidNotAgreeDCC() {
        return cardholderDidNotAgreeDCC;
    }

    /**
     * Sets the value of the cardholderDidNotAgreeDCC property.
     * 
     * @param value
     *     allowed object is
     *     {@link YNType }
     *     
     */
    public void setCardholderDidNotAgreeDCC(YNType value) {
        this.cardholderDidNotAgreeDCC = value;
    }

    /**
     * Gets the value of the cardholderAttemptToResolve property.
     * 
     * @return
     *     possible object is
     *     {@link YNType }
     *     
     */
    public YNType getCardholderAttemptToResolve() {
        return cardholderAttemptToResolve;
    }

    /**
     * Sets the value of the cardholderAttemptToResolve property.
     * 
     * @param value
     *     allowed object is
     *     {@link YNType }
     *     
     */
    public void setCardholderAttemptToResolve(YNType value) {
        this.cardholderAttemptToResolve = value;
    }

    /**
     * Gets the value of the attemptToResolveProhLocalLaw property.
     * 
     * @return
     *     possible object is
     *     {@link YNType }
     *     
     */
    public YNType getAttemptToResolveProhLocalLaw() {
        return attemptToResolveProhLocalLaw;
    }

    /**
     * Sets the value of the attemptToResolveProhLocalLaw property.
     * 
     * @param value
     *     allowed object is
     *     {@link YNType }
     *     
     */
    public void setAttemptToResolveProhLocalLaw(YNType value) {
        this.attemptToResolveProhLocalLaw = value;
    }

    /**
     * Gets the value of the detailsOfLocalLaw property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDetailsOfLocalLaw() {
        return detailsOfLocalLaw;
    }

    /**
     * Sets the value of the detailsOfLocalLaw property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDetailsOfLocalLaw(String value) {
        this.detailsOfLocalLaw = value;
    }

    /**
     * Gets the value of the otherTranInvolveDiffMerchantInd property.
     * 
     * @return
     *     possible object is
     *     {@link YNType }
     *     
     */
    public YNType getOtherTranInvolveDiffMerchantInd() {
        return otherTranInvolveDiffMerchantInd;
    }

    /**
     * Sets the value of the otherTranInvolveDiffMerchantInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link YNType }
     *     
     */
    public void setOtherTranInvolveDiffMerchantInd(YNType value) {
        this.otherTranInvolveDiffMerchantInd = value;
    }

    /**
     * Gets the value of the otherTranSameMerchantInd property.
     * 
     * @return
     *     possible object is
     *     {@link YNType }
     *     
     */
    public YNType getOtherTranSameMerchantInd() {
        return otherTranSameMerchantInd;
    }

    /**
     * Sets the value of the otherTranSameMerchantInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link YNType }
     *     
     */
    public void setOtherTranSameMerchantInd(YNType value) {
        this.otherTranSameMerchantInd = value;
    }

    /**
     * Gets the value of the transactionID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTransactionID() {
        return transactionID;
    }

    /**
     * Sets the value of the transactionID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTransactionID(String value) {
        this.transactionID = value;
    }

    /**
     * Gets the value of the arn property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getARN() {
        return arn;
    }

    /**
     * Sets the value of the arn property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setARN(String value) {
        this.arn = value;
    }

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((accountStatus == null) ? 0 : accountStatus.hashCode());
		result = prime * result + ((arn == null) ? 0 : arn.hashCode());
		result = prime * result
				+ ((attemptToResolveProhLocalLaw == null) ? 0 : attemptToResolveProhLocalLaw.hashCode());
		result = prime * result + ((authorizationRequestDeclinedValidDataInd == null) ? 0
				: authorizationRequestDeclinedValidDataInd.hashCode());
		result = prime * result
				+ ((bothTransactionsOnSameAcctNumberInd == null) ? 0 : bothTransactionsOnSameAcctNumberInd.hashCode());
		result = prime * result + ((cardholderAttemptToResolve == null) ? 0 : cardholderAttemptToResolve.hashCode());
		result = prime * result + ((cardholderDidNotAgreeDCC == null) ? 0 : cardholderDidNotAgreeDCC.hashCode());
		result = prime * result
				+ ((cardholderReceiptAccountNumber == null) ? 0 : cardholderReceiptAccountNumber.hashCode());
		result = prime * result + ((cardholderReceiptAmt == null) ? 0 : cardholderReceiptAmt.hashCode());
		result = prime * result
				+ ((chipCardContainValidCryptogramInd == null) ? 0 : chipCardContainValidCryptogramInd.hashCode());
		result = prime * result + ((correctCurrency == null) ? 0 : correctCurrency.hashCode());
		result = prime * result + ((detailsOfLocalLaw == null) ? 0 : detailsOfLocalLaw.hashCode());
		result = prime * result + ((duplicateTranId == null) ? 0 : duplicateTranId.hashCode());
		result = prime * result + ((explainWhyCreditRefundProcessedInError == null) ? 0
				: explainWhyCreditRefundProcessedInError.hashCode());
		result = prime * result
				+ ((explainWhyValidDataInclusionReason == null) ? 0 : explainWhyValidDataInclusionReason.hashCode());
		result = prime * result + ((incorrectCurrencyReason == null) ? 0 : incorrectCurrencyReason.hashCode());
		result = prime * result + ((incorrectTransactionId == null) ? 0 : incorrectTransactionId.hashCode());
		result = prime * result + ((issuerEvidenceMerchantPassedOnFundsInd == null) ? 0
				: issuerEvidenceMerchantPassedOnFundsInd.hashCode());
		result = prime * result
				+ ((issuerMasterFileAccountNumberInd == null) ? 0 : issuerMasterFileAccountNumberInd.hashCode());
		result = prime * result + ((issuerOrCardholderOtherAcctWithDiffVisaCardInd == null) ? 0
				: issuerOrCardholderOtherAcctWithDiffVisaCardInd.hashCode());
		result = prime * result + ((merchantDisputePriceDiffInd == null) ? 0 : merchantDisputePriceDiffInd.hashCode());
		result = prime * result
				+ ((otherTranInvolveDiffMerchantInd == null) ? 0 : otherTranInvolveDiffMerchantInd.hashCode());
		result = prime * result + ((otherTranSameMerchantInd == null) ? 0 : otherTranSameMerchantInd.hashCode());
		result = prime * result + ((prepaymentBalanceNotPaidInd == null) ? 0 : prepaymentBalanceNotPaidInd.hashCode());
		result = prime * result
				+ ((prepaymentPartialTransactionInd == null) ? 0 : prepaymentPartialTransactionInd.hashCode());
		result = prime * result
				+ ((processingErrorOtherExplanation == null) ? 0 : processingErrorOtherExplanation.hashCode());
		result = prime * result
				+ ((providingPaymentProofOtherMeans == null) ? 0 : providingPaymentProofOtherMeans.hashCode());
		result = prime * result
				+ ((receiptAccountNumberMatchInd == null) ? 0 : receiptAccountNumberMatchInd.hashCode());
		result = prime * result + ((rolTransactionId == null) ? 0 : rolTransactionId.hashCode());
		result = prime * result + ((transactionCodeIncorrect == null) ? 0 : transactionCodeIncorrect.hashCode());
		result = prime * result + ((transactionID == null) ? 0 : transactionID.hashCode());
		result = prime * result
				+ ((whatIncorrectAboutTransaction == null) ? 0 : whatIncorrectAboutTransaction.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		DisputeProcessErrorType other = (DisputeProcessErrorType) obj;
		if (accountStatus != other.accountStatus)
			return false;
		if (arn == null) {
			if (other.arn != null)
				return false;
		} else if (!arn.equals(other.arn))
			return false;
		if (attemptToResolveProhLocalLaw != other.attemptToResolveProhLocalLaw)
			return false;
		if (authorizationRequestDeclinedValidDataInd == null) {
			if (other.authorizationRequestDeclinedValidDataInd != null)
				return false;
		} else if (!authorizationRequestDeclinedValidDataInd.equals(other.authorizationRequestDeclinedValidDataInd))
			return false;
		if (bothTransactionsOnSameAcctNumberInd != other.bothTransactionsOnSameAcctNumberInd)
			return false;
		if (cardholderAttemptToResolve != other.cardholderAttemptToResolve)
			return false;
		if (cardholderDidNotAgreeDCC != other.cardholderDidNotAgreeDCC)
			return false;
		if (cardholderReceiptAccountNumber == null) {
			if (other.cardholderReceiptAccountNumber != null)
				return false;
		} else if (!cardholderReceiptAccountNumber.equals(other.cardholderReceiptAccountNumber))
			return false;
		if (cardholderReceiptAmt == null) {
			if (other.cardholderReceiptAmt != null)
				return false;
		} else if (!cardholderReceiptAmt.equals(other.cardholderReceiptAmt))
			return false;
		if (chipCardContainValidCryptogramInd != other.chipCardContainValidCryptogramInd)
			return false;
		if (correctCurrency == null) {
			if (other.correctCurrency != null)
				return false;
		} else if (!correctCurrency.equals(other.correctCurrency))
			return false;
		if (detailsOfLocalLaw == null) {
			if (other.detailsOfLocalLaw != null)
				return false;
		} else if (!detailsOfLocalLaw.equals(other.detailsOfLocalLaw))
			return false;
		if (duplicateTranId == null) {
			if (other.duplicateTranId != null)
				return false;
		} else if (!duplicateTranId.equals(other.duplicateTranId))
			return false;
		if (explainWhyCreditRefundProcessedInError == null) {
			if (other.explainWhyCreditRefundProcessedInError != null)
				return false;
		} else if (!explainWhyCreditRefundProcessedInError.equals(other.explainWhyCreditRefundProcessedInError))
			return false;
		if (explainWhyValidDataInclusionReason == null) {
			if (other.explainWhyValidDataInclusionReason != null)
				return false;
		} else if (!explainWhyValidDataInclusionReason.equals(other.explainWhyValidDataInclusionReason))
			return false;
		if (incorrectCurrencyReason != other.incorrectCurrencyReason)
			return false;
		if (incorrectTransactionId == null) {
			if (other.incorrectTransactionId != null)
				return false;
		} else if (!incorrectTransactionId.equals(other.incorrectTransactionId))
			return false;
		if (issuerEvidenceMerchantPassedOnFundsInd != other.issuerEvidenceMerchantPassedOnFundsInd)
			return false;
		if (issuerMasterFileAccountNumberInd != other.issuerMasterFileAccountNumberInd)
			return false;
		if (issuerOrCardholderOtherAcctWithDiffVisaCardInd != other.issuerOrCardholderOtherAcctWithDiffVisaCardInd)
			return false;
		if (merchantDisputePriceDiffInd != other.merchantDisputePriceDiffInd)
			return false;
		if (otherTranInvolveDiffMerchantInd != other.otherTranInvolveDiffMerchantInd)
			return false;
		if (otherTranSameMerchantInd != other.otherTranSameMerchantInd)
			return false;
		if (prepaymentBalanceNotPaidInd != other.prepaymentBalanceNotPaidInd)
			return false;
		if (prepaymentPartialTransactionInd != other.prepaymentPartialTransactionInd)
			return false;
		if (processingErrorOtherExplanation == null) {
			if (other.processingErrorOtherExplanation != null)
				return false;
		} else if (!processingErrorOtherExplanation.equals(other.processingErrorOtherExplanation))
			return false;
		if (providingPaymentProofOtherMeans != other.providingPaymentProofOtherMeans)
			return false;
		if (receiptAccountNumberMatchInd != other.receiptAccountNumberMatchInd)
			return false;
		if (rolTransactionId == null) {
			if (other.rolTransactionId != null)
				return false;
		} else if (!rolTransactionId.equals(other.rolTransactionId))
			return false;
		if (transactionCodeIncorrect != other.transactionCodeIncorrect)
			return false;
		if (transactionID == null) {
			if (other.transactionID != null)
				return false;
		} else if (!transactionID.equals(other.transactionID))
			return false;
		if (whatIncorrectAboutTransaction != other.whatIncorrectAboutTransaction)
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "DisputeProcessErrorType [whatIncorrectAboutTransaction=" + whatIncorrectAboutTransaction
				+ ", accountStatus=" + accountStatus + ", correctCurrency=" + correctCurrency + ", rolTransactionId="
				+ rolTransactionId + ", incorrectTransactionId=" + incorrectTransactionId + ", duplicateTranId="
				+ duplicateTranId + ", transactionCodeIncorrect=" + transactionCodeIncorrect
				+ ", issuerMasterFileAccountNumberInd=" + issuerMasterFileAccountNumberInd
				+ ", cardholderReceiptAccountNumber=" + cardholderReceiptAccountNumber
				+ ", chipCardContainValidCryptogramInd=" + chipCardContainValidCryptogramInd
				+ ", explainWhyCreditRefundProcessedInError=" + explainWhyCreditRefundProcessedInError
				+ ", receiptAccountNumberMatchInd=" + receiptAccountNumberMatchInd
				+ ", prepaymentPartialTransactionInd=" + prepaymentPartialTransactionInd + ", cardholderReceiptAmt="
				+ cardholderReceiptAmt + ", merchantDisputePriceDiffInd=" + merchantDisputePriceDiffInd
				+ ", bothTransactionsOnSameAcctNumberInd=" + bothTransactionsOnSameAcctNumberInd
				+ ", issuerOrCardholderOtherAcctWithDiffVisaCardInd=" + issuerOrCardholderOtherAcctWithDiffVisaCardInd
				+ ", issuerEvidenceMerchantPassedOnFundsInd=" + issuerEvidenceMerchantPassedOnFundsInd
				+ ", prepaymentBalanceNotPaidInd=" + prepaymentBalanceNotPaidInd + ", providingPaymentProofOtherMeans="
				+ providingPaymentProofOtherMeans + ", processingErrorOtherExplanation="
				+ processingErrorOtherExplanation + ", incorrectCurrencyReason=" + incorrectCurrencyReason
				+ ", authorizationRequestDeclinedValidDataInd=" + authorizationRequestDeclinedValidDataInd
				+ ", explainWhyValidDataInclusionReason=" + explainWhyValidDataInclusionReason
				+ ", cardholderDidNotAgreeDCC=" + cardholderDidNotAgreeDCC + ", cardholderAttemptToResolve="
				+ cardholderAttemptToResolve + ", attemptToResolveProhLocalLaw=" + attemptToResolveProhLocalLaw
				+ ", detailsOfLocalLaw=" + detailsOfLocalLaw + ", otherTranInvolveDiffMerchantInd="
				+ otherTranInvolveDiffMerchantInd + ", otherTranSameMerchantInd=" + otherTranSameMerchantInd
				+ ", transactionID=" + transactionID + ", arn=" + arn + "]";
	}

}
